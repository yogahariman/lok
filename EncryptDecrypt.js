//https://api-lok-live.leagueofkingdoms.com/api/field/march/info
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

//https://api-lok-live.leagueofkingdoms.com/api/field/rally/join
//VRYVUUEEWWdKCFgRAhMUdU9aU1wDVBECUgdQQQEfHgdUEl8CR1ZURQ1RXRNdS1gdU0dFCwMURVYMHkRAWhZCAB9FVVZZAxVbQR0MWVsNXlcCVRECVxtDGUEMFARUElITRVJbDBVbQR0MSlEeVV0UVBECVxtDAlRfDA5ITR8cE1BXA1JDSwQeHwRIAQNTHRFUAkEEHRMUHhhaQ1YLVFBMRQ1RXRNPQ1sNXkdFCwMURVMEEFUMFARUEkQIRF1cAlNDSwECDFwIEglXHRFZE0MAEloMFARUElcCV1ZWFFJDSwECDEcdQRFdAU4UHBUCHlVLDA5NAAJXAQAIVBtDHVRYS1haCgNLE0BdC1ICBRMUHhhaUV4IRF1MRQ1RXRNKS1UcEglXHRFPCEIPFVRKDA5IHBEPQRECVxtDEEVaT1cTEglXHRFcAlEEH0JLDA5IHBEUVEIaXQccXUoMTVscVRFdBAMJVwdTQQUCDFgdRlYLEwkISxUSFF1LTUBaCgNLE1JVCEIPBRMUHhhaVFYGVRECVxtDBl5bQFAdVBFdAR8aD0dDSwECDFUMRFIEWhECVxtDFVRIS1oLVRFdAR8aFFIQUwseUxgDElAIVVYaXQJRQAEeHQRMHBELVEVdCxVbQR0MXVEUVVATEwkISxUAHF5bQEBaCgNLE1ddBlNDSwECDEMXRV0DVFcaXQdNU1leDA5IHBEGRUdZBFxDSwECDFAdVlYJQlYaXQdNU0JLXxZCAE5LShFbCFMEUwsbHgVIAABXBB8aC1IXFF0MFARUEkACXVZbExVbQR0MT1kXRV0TEwkISxUFFFBKDA5IHBEQXkZWA1IFUwseAhYQQBFdAR8aBkMVEFJFDA5IHBEDVFVdCUQEUwseAhYLVUJFCwNFS0xDEl5KSxZCBQNWAQMJVwJNU11LWFEUEglXHRFLAlsEEkUMFARUElIKXkZWExVbQR0MSlEZVBFdAR8aEFgUH1VLShZCAB9FWUMaXQdNU1BaWlUbWxFdAR8aA1IHFF9dSxZCAB9FQlZJRQ1RDB1VDFcXVFZFCwYIVgdRQwEbAhYUVUUCXRECVxtDAlRCS1cMEglXHRFZClgUH0UMFARUElcCUFcaXQdNU0ZBW1ocVVdFCwMURV8RUwseAhYZREcGUlgaXQdNU1VLSFEWQ1ZFCwMURUQEABMUHklUSxEEXlddRQ1UQQAeHgdIBh9FXVZOAltDSwECDEcdXFYERRECVxtDEFxBW1oMEglWBAMIVwdNU1VLT1BaCgNLE0RXElkFFFUMFARUElsXEwkISxUABUVPTV9aCgNLE1ddAVIPAlQMFARUEkACQBECV0o8XRNcT1gUSX4IeFcaXRVXSQMaGlJOVQUCBVUIVQZWFQBMGgFACApFTA
//VRYKVUASXUcaXUMTBFQCDFodR2cGQlgaXUxDLlhKDA5aBgtVBQdeXwIERFBIHlVIVVBQBAIAUVFTUx0MTVscVRFdAx8aFEMABURdDA5JHBEURVJKE1IFUwsMHARKBR5XBB4JU2NRSQseFg5LBx1VBwJiRRtDFEleS1cMVVciX1ddAxVbUwMeHAFVAAZKAAdsVw9bQQkUHQNWCQNSaxEURUMIHFQMFARWBgdTAgEBXw5XSAEZHAVOBR9FQVJKBlpDS0oMSEYXXXoDEwkaUQAERldIGQ0bVVEEBgUPUgcDElBMF1ZKEh9FV0FXCnsOEhMUdQVJHAJXAAYUVgdQRGwCDEAXfFwEEwljVgZNQAEfGxhJAAJfbB8aA14SBVBATVFaCgBLE15ZFVQJJUheSxZCCB9FQ1JUC04sHnhKDA5aBgtVBQdeUVJXFAVIHgZJB1dWUwcNXw9YUx0MSkYZV1xFC1VZC0QEXRNDQX0cEglFBwsKUwMHSQRLG1UeAFJXVFAPUgZZR1caDEkFTQ==

const xorPassword = ".4x03g138g7aq1.";
//profile
//const s ="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";
//use AP
const s ="VRYbX1cCEwkJVwZRQAEbHhhaUV4IRF1MRQ1QDA";
//const s = "VRYVUUEEWWdKCFgRAhMUdU9aU1wDVBECUgdQQQEfHgJUEl8CR1ZURQ1RXRNdS1gdU0dFCwMURVYMHkRAWhZCAB9FVVZZAxVbQR0MWVsNXlcCVRECVxtDGUEMFARUElITRVJbDBVbQR0MSlEeVV0UVBECVxtDAlRfDA5ITR8cE1BXA1JDSwQeHwRIAgNRHRFUAkEEHRMUHhhaQ1YLVFBMRQ1RXRNPQ1sNXkdFCwMURVMEEFUMFARUEkQIRF1cAlNDSwECDFwIEglXHRFZE0MAEloMFARUElcCV1ZWFFJDSwECDEcdQRFdAU4UHBUCHlVLDA5NAAJXAQAIURtDHVRYS1haCgNLE0BdC1ICBRMUHhhaUV4IRF1MRQ1QQQEeHgRUElcCUFcaXQdNU0ZBW1ocVVdFCwMURV8RUwseAhYZREcGUlgaXQdNU1VLSFEWQ1ZFCwMURUQEABMUHklUSxEEXlddRQ1UQQAeHgVIBB9FXVZOAltDSwECDEcdXFYERRECVxtDEFxBW1oMEglXHRFcAlYFUwseAhYPX0YJVVZcRQ1RXRNGXhZCAB9FUEdMBlQKUwseAhYcVVUCX0BdRQ1RXRNdS0VaCgMaHUgaBFgFFBMUGwRJAANVAQcURVsEB1RCDA5IHBEUVF9dBENDSwECDFUVX0YJRRECVxtDFVRPShZCAB9FRlxNCVMEFRMUHhhaWENFCwMURVYVBVBNRRZCAB9FVVZeAlkSFBMUHhhaQ1YWEwkIGhsaU1JBSlFaCgZXAAMIVAdVXRNCS0IdXBFdAR8aFFINFFJaDA5IHBEGXFxNCUNDSwECDFAdUVdFCwMURUAOBF9KS1BaCgNLE1tIRQ1RXRNPWkAZU1hFCwMURVMEF1RAXVFaCgNLE0BdFhVbQUxzAhYKUV8LSH5XLlNDSxMYFgZNBwJXCVZZAVZVRAJNT1JPUlcBBlUaGg";

// Decode base64 to bytes
function base64ToBytes(b64) {
    const binaryStr = atob(b64);
    return Uint8Array.from([...binaryStr].map(c => c.charCodeAt(0)));
}

// Encode bytes to base64
function bytesToBase64(bytes) {
    const binaryStr = String.fromCharCode(...bytes);
    return btoa(binaryStr);
}

// XOR decrypt/encrypt using the same method
function xorBytes(bytes, password) {
    return bytes.map((byte, index) => byte ^ password.charCodeAt(index % password.length));
}

// Convert byte array to string
function bytesToString(bytes) {
    return String.fromCharCode(...bytes);
}

// Convert string to byte array
function stringToBytes(str) {
    return Uint8Array.from([...str].map(c => c.charCodeAt(0)));
}

// ðŸ”“ Decrypt function (like b64xor_dec)
function b64xorDec(s, password) {
    const base64Bytes = base64ToBytes(s);
    const decryptedBytes = xorBytes(base64Bytes, password);
    const decryptedStr = bytesToString(decryptedBytes);
    return JSON.parse(decryptedStr);
}

// ðŸ”’ Encrypt function (like b64xor_enc)
function b64xorEnc(obj, password) {
    const jsonStr = JSON.stringify(obj); // no space formatting like separators=(',', ':')
    const plainBytes = stringToBytes(jsonStr);
    const xoredBytes = xorBytes(plainBytes, password);
    return bytesToBase64(xoredBytes);
}

// âœ… Coba decode string s
try {
    const result = b64xorDec(s, xorPassword);
    console.log("Hasil decrypt:", result);

    // âœ… Coba encode lagi
    const encrypted = b64xorEnc(result, xorPassword);
    console.log("Hasil encrypt ulang:", encrypted);

    // Opsional: cek sama seperti input awal?
    console.log("Apakah hasil encode sama dengan input awal?", encrypted === s);
} catch (e) {
    console.error("Gagal decode atau encode:", e.message);
}
